//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18444
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using System;
using System.IO;
using System.Runtime.Serialization.Formatters.Binary;
using UnityEngine;
using System.Runtime.Serialization;

namespace CC.Runtime.Utils
{
	public static class PersistUtils
	{
		public static void Save( string path, System.Object obj ){
#if !UNITY_WEBPLAYER
			string p = System.IO.Path.Combine(Application.persistentDataPath ,path);
			Type t = obj.GetType();
			if( t.GetCustomAttribute<SerializableAttribute>() != null || typeof(ISerializable).IsAssignableFrom(t) ){
				BinaryFormatter formatter = new BinaryFormatter();
				try{
					using(FileStream fs = new FileStream(p,FileMode.Create)){
						formatter.Serialize(fs, obj);
					}
				}
				catch( Exception ex ){
					UnityEngine.Debug.LogException(ex);
				}
			}
			else{
				try{
					using( StreamWriter sr = new StreamWriter(p,false) ){
						sr.Write(obj.ToString());	
					}
				}
				catch(Exception ex){
					UnityEngine.Debug.LogException(ex);
				}
			}
				
#endif
		}

		public static T Load<T>( string path ) where T : class {
#if !UNITY_WEBPLAYER
			string p = System.IO.Path.Combine(Application.persistentDataPath, path);

			BinaryFormatter formatter = new BinaryFormatter();
			try{
				if(File.Exists(p)){
					using(FileStream fs = new FileStream(p,FileMode.Open)){
						return (T)formatter.Deserialize(fs);
					}
				}
			}
			catch(Exception ex){
				UnityEngine.Debug.LogException(ex);
			}
			return default(T);
#else
			return default(T);
#endif
		}
	}
}

